@using BlazorDrawFBP.Renderers
@using Mas.Schema.Fbp
<div>
    <MudCard>
        <MudCardContent>
            <MudNumericField Class="d-inline-flex pr-6" Style="width: 80px;"
                             @bind-Value="Node.DisplayNoOfLines"
                             Label="#Lines"
                             Variant="Variant.Outlined"
                             Min="1" Max="10000"/>
            <MudIconButton Style="position: absolute; right: -5px; top: -5px;"
                           OnClick="SendIip"
                           Icon="@Icons.Material.Filled.Repeat"
                           Color="@Color.Primary"/>
            <MudTextField Class="d-inline-flex pr-4"
                          @bind-Value="Node.ShortDescription"
                          Label="Description"
                          Variant="Variant.Outlined"/>
            @* <CodeBlock *@
            @*     Code="@Node.Content" *@
            @*     Language="@CodeLanguage.Toml" *@
            @*     EnableLineNumbers="false" /> *@
            <MudTextField T="string" @bind-Value="Node.Content" Lines="@Node.DisplayNoOfLines" Label="IIP content"
                          Variant="Variant.Outlined"/>
        </MudCardContent>

        @foreach (var port in Node.Ports)
        {
            if (port is not CapnpFbpIipPortModel iipPort) continue;
            <CapnpFbpIipPortRenderer Port="iipPort" Class="default"/>
        }
    </MudCard>
</div>

@*
<div>
    <MudTextField T="string" @bind-Value="Node.Content" Lines="3" Label="IIP content" Variant="Variant.Outlined"/>

    @foreach (var port in Node.Ports)
    {
        if (port is not CapnpFbpIipPortModel iipPort) continue;
        <CapnpFbpIipPortRenderer Port="iipPort" Class="default"/>
    }
</div>
*@

@code
{
    [Parameter] public CapnpFbpIipModel Node { get; set; }

    private async void SendIip()
    {
        try
        {
            foreach (var pl in Node.Links)
            {
                if (pl is not RememberCapnpPortsLinkModel rcplm) continue;
                if (rcplm.OutPortModel is not CapnpFbpIipPortModel iippm) continue;
                if (iippm.Writer == null) return;
                await iippm.Writer.Write(new Channel<IP>.Msg
                {
                    Value = new IP { Content = Node.Content }
                });
            }
        }
        catch (Exception e)
        {
            Console.WriteLine("Caught exception: " + e);
        }
    }
}